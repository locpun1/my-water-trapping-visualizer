{"ast":null,"code":"var _jsxFileName = \"D:\\\\CongViec\\\\bai-3\\\\src\\\\components\\\\CanvasDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasDisplay = ({\n  numbers\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const blockSize = 50;\n  const padding = 20;\n  const [totalWater, setTotalWater] = useState(0);\n  const gap = 5;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const canvasWidth = numbers.length * blockSize + 2 * padding;\n    const maxNumber = Math.max(...numbers, 0);\n    const canvasHeight = maxNumber * (blockSize + gap) + 2 * padding;\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    const calculateWater = heights => {\n      const n = heights.length;\n      const waterLevels = new Array(n).fill(0);\n      if (n === 0) return waterLevels;\n      let leftMax = new Array(n).fill(0);\n      let rightMax = new Array(n).fill(0);\n      leftMax[0] = heights[0];\n      for (let i = 1; i < n; i++) {\n        leftMax[i] = Math.max(heights[i], leftMax[i - 1]);\n      }\n      rightMax[n - 1] = heights[n - 1];\n      for (let i = n - 2; i >= 0; i--) {\n        rightMax[i] = Math.max(heights[i], rightMax[i + 1]);\n      }\n      for (let i = 0; i < n; i++) {\n        const minBoundary = Math.min(leftMax[i], rightMax[i]);\n        waterLevels[i] = Math.max(0, minBoundary - heights[i]);\n      }\n      return waterLevels;\n    };\n    for (let i = 0; i < numbers.length; i++) {\n      const height = numbers[i];\n      const x = i * blockSize + padding;\n      for (let j = 0; j < height; j++) {\n        const y = canvasHeight - (j + 1) * (blockSize + gap) - padding;\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(x, y, blockSize, blockSize);\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 1;\n        ctx.strokeRect(x, y, blockSize, blockSize);\n      }\n    }\n    let water = calculateWater(numbers);\n    let calculatedTotalWater = 0;\n    for (let i = 0; i < numbers.length; i++) {\n      const waterHeight = water[i];\n      calculatedTotalWater += waterHeight;\n      if (waterHeight > 0) {\n        const x = i * blockSize + padding;\n        const y = canvasHeight - (numbers[i] + waterHeight) * blockSize - padding - gap;\n        ctx.fillStyle = '#4682B4';\n        ctx.fillRect(x, y, blockSize, waterHeight * blockSize);\n      }\n    }\n    setTotalWater(calculatedTotalWater);\n    ctx.strokeStyle = 'black';\n    ctx.strokeRect(0, 0, canvasWidth, canvasHeight);\n  }, [numbers, blockSize, padding]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"T\\u1ED5ng l\\u01B0\\u1EE3ng n\\u01B0\\u1EDBc: \", totalWater, \"m\\xB3\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(CanvasDisplay, \"srYmLfsSfs6wjpfFuIQXKKbirCM=\");\n_c = CanvasDisplay;\nexport default CanvasDisplay;\nvar _c;\n$RefreshReg$(_c, \"CanvasDisplay\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","CanvasDisplay","numbers","_s","canvasRef","blockSize","padding","totalWater","setTotalWater","gap","canvas","current","ctx","getContext","canvasWidth","length","maxNumber","Math","max","canvasHeight","width","height","clearRect","calculateWater","heights","n","waterLevels","Array","fill","leftMax","rightMax","i","minBoundary","min","x","j","y","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","water","calculatedTotalWater","waterHeight","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CongViec/bai-3/src/components/CanvasDisplay.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\ninterface CanvasDisplayProps {\r\n    numbers: number[];\r\n}\r\n\r\nconst CanvasDisplay: React.FC<CanvasDisplayProps> = ({ numbers }) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const blockSize = 50;\r\n    const padding = 20;\r\n    const [totalWater, setTotalWater] = useState(0);\r\n    const gap = 5;\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext('2d');\r\n        if (!ctx) return;\r\n\r\n        const canvasWidth = numbers.length * blockSize + 2 * padding;\r\n        const maxNumber = Math.max(...numbers, 0);\r\n        const canvasHeight = maxNumber * (blockSize + gap) + 2 * padding;\r\n\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n\r\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n        const calculateWater = (heights: number[]): number[] => {\r\n            const n = heights.length;\r\n            const waterLevels = new Array(n).fill(0);\r\n            if (n === 0) return waterLevels;\r\n\r\n            let leftMax = new Array(n).fill(0);\r\n            let rightMax = new Array(n).fill(0);\r\n\r\n            leftMax[0] = heights[0];\r\n            for (let i = 1; i < n; i++) {\r\n                leftMax[i] = Math.max(heights[i], leftMax[i - 1]);\r\n            }\r\n\r\n            rightMax[n - 1] = heights[n - 1];\r\n            for (let i = n - 2; i >= 0; i--) {\r\n                rightMax[i] = Math.max(heights[i], rightMax[i + 1]);\r\n            }\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                const minBoundary = Math.min(leftMax[i], rightMax[i]);\r\n                waterLevels[i] = Math.max(0, minBoundary - heights[i]);\r\n            }\r\n\r\n            return waterLevels;\r\n        };\r\n\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            const height = numbers[i];\r\n            const x = i * blockSize + padding;\r\n\r\n            for (let j = 0; j < height; j++) {\r\n                const y = canvasHeight - (j + 1) * (blockSize + gap) - padding;\r\n\r\n                ctx.fillStyle = '#ffffff';\r\n                ctx.fillRect(x, y, blockSize, blockSize);\r\n\r\n                ctx.strokeStyle = 'black';\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeRect(x, y, blockSize, blockSize);\r\n            }\r\n        }\r\n\r\n        let water = calculateWater(numbers);\r\n        let calculatedTotalWater = 0;\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            const waterHeight = water[i];\r\n            calculatedTotalWater += waterHeight;\r\n            if (waterHeight > 0) {\r\n                const x = i * blockSize + padding;\r\n                const y = canvasHeight - (numbers[i] + waterHeight) * blockSize - padding - gap;\r\n\r\n                ctx.fillStyle = '#4682B4';\r\n                ctx.fillRect(x, y, blockSize, waterHeight * blockSize);\r\n            }\r\n        }\r\n        setTotalWater(calculatedTotalWater);\r\n\r\n        ctx.strokeStyle = 'black';\r\n        ctx.strokeRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    }, [numbers, blockSize, padding]);\r\n\r\n    return (\r\n        <div>\r\n            <canvas ref={canvasRef} style={{ border: '1px solid black' }} />\r\n            <p>Tổng lượng nước: {totalWater}m³</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CanvasDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3D,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAMC,SAAS,GAAGR,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMS,SAAS,GAAG,EAAE;EACpB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMW,GAAG,GAAG,CAAC;EAEbZ,SAAS,CAAC,MAAM;IACZ,MAAMa,MAAM,GAAGN,SAAS,CAACO,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;IAEV,MAAME,WAAW,GAAGZ,OAAO,CAACa,MAAM,GAAGV,SAAS,GAAG,CAAC,GAAGC,OAAO;IAC5D,MAAMU,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGhB,OAAO,EAAE,CAAC,CAAC;IACzC,MAAMiB,YAAY,GAAGH,SAAS,IAAIX,SAAS,GAAGI,GAAG,CAAC,GAAG,CAAC,GAAGH,OAAO;IAEhEI,MAAM,CAACU,KAAK,GAAGN,WAAW;IAC1BJ,MAAM,CAACW,MAAM,GAAGF,YAAY;IAE5BP,GAAG,CAACU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAER,WAAW,EAAEK,YAAY,CAAC;IAE9C,MAAMI,cAAc,GAAIC,OAAiB,IAAe;MACpD,MAAMC,CAAC,GAAGD,OAAO,CAACT,MAAM;MACxB,MAAMW,WAAW,GAAG,IAAIC,KAAK,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACxC,IAAIH,CAAC,KAAK,CAAC,EAAE,OAAOC,WAAW;MAE/B,IAAIG,OAAO,GAAG,IAAIF,KAAK,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MAClC,IAAIE,QAAQ,GAAG,IAAIH,KAAK,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MAEnCC,OAAO,CAAC,CAAC,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC;MACvB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAE;QACxBF,OAAO,CAACE,CAAC,CAAC,GAAGd,IAAI,CAACC,GAAG,CAACM,OAAO,CAACO,CAAC,CAAC,EAAEF,OAAO,CAACE,CAAC,GAAG,CAAC,CAAC,CAAC;MACrD;MAEAD,QAAQ,CAACL,CAAC,GAAG,CAAC,CAAC,GAAGD,OAAO,CAACC,CAAC,GAAG,CAAC,CAAC;MAChC,KAAK,IAAIM,CAAC,GAAGN,CAAC,GAAG,CAAC,EAAEM,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC7BD,QAAQ,CAACC,CAAC,CAAC,GAAGd,IAAI,CAACC,GAAG,CAACM,OAAO,CAACO,CAAC,CAAC,EAAED,QAAQ,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;MACvD;MAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAE;QACxB,MAAMC,WAAW,GAAGf,IAAI,CAACgB,GAAG,CAACJ,OAAO,CAACE,CAAC,CAAC,EAAED,QAAQ,CAACC,CAAC,CAAC,CAAC;QACrDL,WAAW,CAACK,CAAC,CAAC,GAAGd,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEc,WAAW,GAAGR,OAAO,CAACO,CAAC,CAAC,CAAC;MAC1D;MAEA,OAAOL,WAAW;IACtB,CAAC;IAED,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,OAAO,CAACa,MAAM,EAAEgB,CAAC,EAAE,EAAE;MACrC,MAAMV,MAAM,GAAGnB,OAAO,CAAC6B,CAAC,CAAC;MACzB,MAAMG,CAAC,GAAGH,CAAC,GAAG1B,SAAS,GAAGC,OAAO;MAEjC,KAAK,IAAI6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,MAAM,EAAEc,CAAC,EAAE,EAAE;QAC7B,MAAMC,CAAC,GAAGjB,YAAY,GAAG,CAACgB,CAAC,GAAG,CAAC,KAAK9B,SAAS,GAAGI,GAAG,CAAC,GAAGH,OAAO;QAE9DM,GAAG,CAACyB,SAAS,GAAG,SAAS;QACzBzB,GAAG,CAAC0B,QAAQ,CAACJ,CAAC,EAAEE,CAAC,EAAE/B,SAAS,EAAEA,SAAS,CAAC;QAExCO,GAAG,CAAC2B,WAAW,GAAG,OAAO;QACzB3B,GAAG,CAAC4B,SAAS,GAAG,CAAC;QACjB5B,GAAG,CAAC6B,UAAU,CAACP,CAAC,EAAEE,CAAC,EAAE/B,SAAS,EAAEA,SAAS,CAAC;MAC9C;IACJ;IAEA,IAAIqC,KAAK,GAAGnB,cAAc,CAACrB,OAAO,CAAC;IACnC,IAAIyC,oBAAoB,GAAG,CAAC;IAC5B,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,OAAO,CAACa,MAAM,EAAEgB,CAAC,EAAE,EAAE;MACrC,MAAMa,WAAW,GAAGF,KAAK,CAACX,CAAC,CAAC;MAC5BY,oBAAoB,IAAIC,WAAW;MACnC,IAAIA,WAAW,GAAG,CAAC,EAAE;QACjB,MAAMV,CAAC,GAAGH,CAAC,GAAG1B,SAAS,GAAGC,OAAO;QACjC,MAAM8B,CAAC,GAAGjB,YAAY,GAAG,CAACjB,OAAO,CAAC6B,CAAC,CAAC,GAAGa,WAAW,IAAIvC,SAAS,GAAGC,OAAO,GAAGG,GAAG;QAE/EG,GAAG,CAACyB,SAAS,GAAG,SAAS;QACzBzB,GAAG,CAAC0B,QAAQ,CAACJ,CAAC,EAAEE,CAAC,EAAE/B,SAAS,EAAEuC,WAAW,GAAGvC,SAAS,CAAC;MAC1D;IACJ;IACAG,aAAa,CAACmC,oBAAoB,CAAC;IAEnC/B,GAAG,CAAC2B,WAAW,GAAG,OAAO;IACzB3B,GAAG,CAAC6B,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE3B,WAAW,EAAEK,YAAY,CAAC;EAEnD,CAAC,EAAE,CAACjB,OAAO,EAAEG,SAAS,EAAEC,OAAO,CAAC,CAAC;EAEjC,oBACIN,OAAA;IAAA6C,QAAA,gBACI7C,OAAA;MAAQ8C,GAAG,EAAE1C,SAAU;MAAC2C,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEpD,OAAA;MAAA6C,QAAA,GAAG,4CAAiB,EAACtC,UAAU,EAAC,OAAE;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACjD,EAAA,CA3FIF,aAA2C;AAAAoD,EAAA,GAA3CpD,aAA2C;AA6FjD,eAAeA,aAAa;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}